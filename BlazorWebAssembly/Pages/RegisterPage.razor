@page "/register"
@using Application.DTOs
@using BlazorWebAssembly.States
@using NetcodeHub.Packages.Components.Validations.OnInput

<div class="row">
    <div class="col-lg-5">
        <div class="alert alert-info mb-3">@Message</div>
        <EditForm Model="RegisterModel" OnValidSubmit="RegisterAsync">
            <DataAnnotationsValidator />
            <FloatingText @bind-Value="RegisterModel.Name" Label="Fullname" Placeholder="JhonDoe" Type="text" class="form-control mb-3" />
            <FloatingText @bind-Value="RegisterModel.Email" Label="Email Address" Placeholder="JhonDoe@mail.com" Type="email" class="form-control mb-3" />

            <FloatingText @bind-Value="RegisterModel.Password" Label="Password" Type="password" class="form-control mb-3" />
            <FloatingText @bind-Value="RegisterModel.ConfirmPassword" Label="Confirm Password" Type="password" class="form-control mb-3" />

            <button class="btn btn-primary mb-3" type="submit">Register</button>
            <ValidationSummary class="text-danger" />
        </EditForm>
    </div>
</div>



@code {
    string? Message = string.Empty;
    RegisterUserDTO RegisterModel = new();
    async Task RegisterAsync()
    {
        var result = await AccountService.RegisterAccountAsync(RegisterModel);
        if (!result.Flag)
            NavManager.NavigateTo("login", forceLoad: true);
        else
            Message = result.Message;
    }
}
